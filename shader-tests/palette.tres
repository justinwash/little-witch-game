[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;
uniform vec4 Red: hint_color;
uniform vec4 Magenta: hint_color;
uniform vec4 Green: hint_color;
uniform vec4 Yellow: hint_color;
uniform vec4 Blue: hint_color;
uniform vec4 Cyan: hint_color;

void fragment(){
	vec4 col = texture(TEXTURE, UV);
	vec4 chosen_col = col;
 	if (col.r == 0.0){
		if (col.b == 0.0){
			if (col.g > 0.0){
				chosen_col.rgb = Green.rgb*col.g;
			}
		}else{
			if(col.g == 0.0){
				chosen_col.rgb = Blue.rgb*col.b;
			}else{
				chosen_col.rgb = Cyan.rgb*((col.g+col.b)/2.0);
			}
		}
	}else{
		if (col.b == 0.0){
			if (col.g == 0.0){
				chosen_col.rgb = Red.rgb*col.r;
			}else{
				chosen_col.rgb = Yellow.rgb*((col.r+col.g)/2.0);
			}
		}else{
			if (col.g == 0.0){
				chosen_col.rgb = Magenta.rgb*((col.r+col.b)/2.0);
			}
		}
	}
    COLOR = chosen_col;
}
"

[resource]
shader = SubResource( 7 )
shader_param/Red = Color( 1, 0, 0, 1 )
shader_param/Magenta = Color( 0.972549, 0, 1, 1 )
shader_param/Green = Color( 0, 1, 0.133333, 1 )
shader_param/Yellow = Color( 0.945098, 1, 0, 1 )
shader_param/Blue = Color( 0.00784314, 0, 1, 1 )
shader_param/Cyan = Color( 0, 0.952941, 1, 1 )
